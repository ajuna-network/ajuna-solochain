[package]
description = "The Ajuna Network Node Runtime"
name        = "ajuna-solo-runtime"
publish     = false

authors.workspace    = true
edition.workspace    = true
homepage.workspace   = true
repository.workspace = true
version.workspace    = true

[package.metadata.docs.rs]
targets = [ "x86_64-unknown-linux-gnu" ]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
# General
hex-literal = { workspace = true, optional = true }
log         = { workspace = true }

# Parity codec
parity-scale-codec = { workspace = true }
scale-info         = { workspace = true, features = [ "derive" ] }

# Substrate
frame-benchmarking                         = { workspace = true, optional = true }
frame-executive                            = { workspace = true }
frame-support                              = { workspace = true }
frame-system                               = { workspace = true }
frame-system-benchmarking                  = { workspace = true, optional = true }
frame-system-rpc-runtime-api               = { workspace = true }
frame-try-runtime                          = { workspace = true }
pallet-asset-tx-payment                    = { workspace = true }
pallet-assets                              = { workspace = true }
pallet-aura                                = { workspace = true }
pallet-balances                            = { workspace = true }
pallet-collective                          = { workspace = true }
pallet-democracy                           = { workspace = true }
pallet-grandpa                             = { workspace = true }
pallet-identity                            = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-multisig                            = { workspace = true }
pallet-nfts                                = { workspace = true }
pallet-preimage                            = { workspace = true }
pallet-proxy                               = { workspace = true }
pallet-scheduler                           = { workspace = true }
pallet-sudo                                = { workspace = true }
pallet-timestamp                           = { workspace = true }
pallet-transaction-payment                 = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury                            = { workspace = true }
pallet-utility                             = { workspace = true }
sp-api                                     = { workspace = true }
sp-block-builder                           = { workspace = true }
sp-consensus-aura                          = { workspace = true }
sp-consensus-grandpa                       = { workspace = true }
sp-core                                    = { workspace = true }
sp-genesis-builder                         = { workspace = true }
sp-inherents                               = { workspace = true }
sp-offchain                                = { workspace = true }
sp-runtime                                 = { workspace = true }
sp-session                                 = { workspace = true }
sp-std                                     = { workspace = true }
sp-storage                                 = { workspace = true }
sp-transaction-pool                        = { workspace = true }
sp-version                                 = { workspace = true }

# ORML
orml-vesting = { workspace = true }

# Ajuna Pallets
pallet-ajuna-awesome-avatars = { workspace = true }
pallet-ajuna-affiliates      = { workspace = true }
pallet-ajuna-battle-mogs     = { workspace = true }
pallet-ajuna-nft-staking     = { workspace = true }
pallet-ajuna-nft-transfer    = { workspace = true }

[features]
default = [ "std" ]
std = [
    "parity-scale-codec/std",
    "log/std",
    "scale-info/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "orml-vesting/std",
    "pallet-ajuna-awesome-avatars/std",
    "pallet-ajuna-affiliates/std",
    "pallet-ajuna-nft-transfer/std",
    "pallet-ajuna-nft-staking/std",
    "pallet-aura/std",
    "pallet-assets/std",
    "pallet-balances/std",
    "pallet-collective/std",
    "pallet-democracy/std",
    "pallet-grandpa/std",
    "pallet-identity/std",
    "pallet-multisig/std",
    "pallet-nfts/std",
    "pallet-preimage/std",
    "pallet-proxy/std",
    "pallet-insecure-randomness-collective-flip/std",
    "pallet-scheduler/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-treasury/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-utility/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-storage/std",
    "sp-transaction-pool/std",
    "sp-version/std",
]

runtime-benchmarks = [
    "hex-literal",
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "orml-vesting/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-identity/runtime-benchmarks",
    "pallet-multisig/runtime-benchmarks",
    "pallet-nfts/runtime-benchmarks",
    "pallet-preimage/runtime-benchmarks",
    "pallet-proxy/runtime-benchmarks",
    "pallet-scheduler/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-treasury/runtime-benchmarks",
    "pallet-utility/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "pallet-ajuna-nft-transfer/runtime-benchmarks",
    "pallet-ajuna-nft-staking/runtime-benchmarks",
]

try-runtime = [
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "orml-vesting/try-runtime",
    "pallet-assets/try-runtime",
    "pallet-asset-tx-payment/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-collective/try-runtime",
    "pallet-democracy/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-identity/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-nfts/try-runtime",
    "pallet-preimage/try-runtime",
    "pallet-proxy/try-runtime",
    "pallet-insecure-randomness-collective-flip/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-treasury/try-runtime",
    "pallet-utility/try-runtime",
    "pallet-ajuna-awesome-avatars/try-runtime",
    "pallet-ajuna-affiliates/try-runtime",
    "pallet-ajuna-battle-mogs/try-runtime",
    "pallet-ajuna-nft-transfer/try-runtime",
    "pallet-ajuna-nft-staking/try-runtime",
]

experimental = [ "pallet-aura/experimental" ]
